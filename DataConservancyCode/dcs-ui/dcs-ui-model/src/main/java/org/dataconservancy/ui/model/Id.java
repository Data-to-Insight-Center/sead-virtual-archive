/*
 * Copyright 2012 Johns Hopkins University
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.dataconservancy.ui.model;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

/**
 *  Id Types to be used by IdService
 */
public class Id {

    private static final Logger LOG = LoggerFactory.getLogger(Id.class);

    /**
     * Obtain the ID authority for this instance of the User Interface. The authority string can be use to namespace
     * identifiers that are generated by the UI.
     * <p/>
     * The authority string should be different for each UI instance.
     *
     * @return the authority string, may be null or empty
     */
    public static String getAuthority() {
        final String resourcePath = "/int.properties";
        final String propertyKey = "dcs.ui.id.authority";

        InputStream in = Id.class.getResourceAsStream(resourcePath);

        if (in == null) {
            LOG.debug("Classpath resource " + resourcePath + " was not found.");
            return null;
        }

        Properties props = new Properties();
        try {
            props.load(in);
        } catch (IOException e) {
            LOG.error("Error loading classpath resource " + resourcePath + ": " + e.getMessage(), e);
        } finally {
            try {
                in.close();
            } catch (IOException e) {
                // ignore
            }
        }

        return props.getProperty(propertyKey);
    }
}
