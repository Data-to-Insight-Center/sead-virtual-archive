<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012 Johns Hopkins University
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

  <context:annotation-config />

  <bean id="httpClient" class="org.apache.http.impl.client.DefaultHttpClient"/>
  
  <bean id="propertyPlaceholderConfigurer"
    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="ignoreUnresolvablePlaceholders" value="true" />
  </bean>

  <bean id="servletContextPropertyPlaceholderConfigurer"
    class="org.springframework.web.context.support.ServletContextPropertyPlaceholderConfigurer">
    <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
    <property name="searchContextAttributes" value="true" />
    <property name="contextOverride" value="true" />
    <property name="ignoreResourceNotFound" value="true" />
    <property name="ignoreUnresolvablePlaceholders" value="true" />
    <property name="locations">
      <list>
        <value>classpath:default.properties</value>

        <!-- If this is found in the classpath, it will override the default 
          values -->
        <value>classpath:dcs.properties</value>

        <!-- Can be specified as a system property on the commend line, specifying 
          an external or classpath resource. example -Dconfig=file:/mnt/dcs/config.properties -->
        <value>${config}</value>
      </list>
    </property>
  </bean>

  <bean id="propertyOverrideConfigurer"
    class="org.springframework.beans.factory.config.PropertyOverrideConfigurer">
    <property name="ignoreInvalidKeys" value="true" />
    <property name="ignoreResourceNotFound" value="true"/>
    <property name="locations">
      <list>
        <value>${config}</value>
      </list>
    </property>
  </bean>
 
  <bean id="org.dataconservancy.dcs.id.impl.MemoryIdServiceImpl"
    class="org.dataconservancy.dcs.id.impl.MemoryIdServiceImpl" scope="singleton"
    lazy-init="true">
  </bean>

  <bean id="org.dataconservancy.dcs.id.impl.lrucache.LruCacheIdService"
        class="org.dataconservancy.dcs.id.impl.lrucache.LruCacheIdService"
        scope="singleton">
    <constructor-arg ref="org.dataconservancy.dcs.id.impl.MemoryIdServiceImpl" />
  </bean>

  <bean id="dcsModelBuilder"
    class="org.dataconservancy.model.builder.xstream.DcsXstreamStaxModelBuilder"
    scope="singleton" />

  <!-- Transaction wrappers and session factory for IDService -->
  <tx:annotation-driven transaction-manager="idTxManager" />

  <bean id="idTxManager"
    class="org.springframework.orm.hibernate3.HibernateTransactionManager"
    lazy-init="true">
    <property name="sessionFactory" ref="idSessionFactory" />
  </bean>

  <bean id="idTxWrapper"
    class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
    lazy-init="true">
    <property name="transactionManager" ref="idTxManager" />
    <property name="target"
      ref="org.dataconservancy.dcs.id.impl.hibernate.HibernateIdService" />
    <property name="transactionAttributes">
      <props>
        <prop key="locateIp">PROPAGATION_REQUIRED</prop>
      </props>
    </property>
  </bean>

  <bean id="idSessionFactory"
    class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
    lazy-init="true">
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">${dcs.idservice.hibernate.dialect}</prop>
        <prop key="hibernate.hbm2ddl.auto">update</prop>
        <prop key="hibernate.show_sql">false</prop>
      </props>
    </property>
    <property name="annotatedClasses">
      <value>org.dataconservancy.dcs.id.impl.hibernate.TypeInfo
      </value>
    </property>

    <property name="dataSource" ref="idDataSource" />
  </bean>

  <bean id="idDataSource" class="org.apache.commons.dbcp.BasicDataSource"
    destroy-method="close">
    <property name="driverClassName" value="${dcs.idservice.hibernate.driverClassName}" />
    <property name="url" value="${dcs.idservice.hibernate.url}" />
    <property name="username" value="${dcs.idservice.hibernate.username}" />
    <property name="password" value="${dcs.idservice.hibernate.password}" />
  </bean>
  	
  <bean id="lineageController" class="org.dataconservancy.dcs.lineage.http.LineageController" depends-on="bootstrap">
  	<constructor-arg ref="lineageService"/>
  	<constructor-arg ref="mockIdService"/>
  	<constructor-arg ref="org.dataconservancy.dcs.query.dcpsolr.DcsDataModelQueryService"/>
  </bean>
  
  <bean id="bootstrap" class="org.dataconservancy.dcs.integration.lineage.BootstrapServlet" init-method="init" >
    <property name="mockIdService" ref="mockIdService" />
    <property name="indexService" ref="org.dataconservancy.dcs.index.dcpsolr.DcpIndexService" />
    <property name="archiveStore" ref="org.dataconservancy.archive.api.ArchiveStore" />
  </bean>
  
  <bean id="lineageService" class="org.dataconservancy.dcs.lineage.impl.LineageServiceImpl">
  	<constructor-arg ref="solrService"/>
  	<constructor-arg ref="mockIdService"/>
  </bean>
  
  <bean id="mockIdService" class="org.dataconservancy.dcs.integration.lineage.MockIdService"/>
  	
</beans>
